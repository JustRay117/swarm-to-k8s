code ~/.bashrc

PS1="\[\e[0;32m\]┌──(\[\e[m\]\[\e[0;33m\]\u@\h\[\e[m\]\[\e[0;32m\])-\[\e[m\]\[\e[1;34m\][\w]\[\e[m\]\[\e[0;32m\]\n\[\e[m\]\[\e[0;32m\]└─\$\[\e[m\] "

source ~/.bashrc

# Disable VM Swap allow kubelet function correctly
sudo swapoff -a
sudo micro /etc/fstab
#/swap.img

sudo apt install docker.io -y
sudo apt install apt-transport-https curl -y

# repo key for download & install k8s
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
# add k8s repo
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt update
sudo apt install kubeadm kubelet kubectl kubernetes-cni -y

# USE THESE IF FAIL: build kubernetes cluster only having master node
sudo apt-add-repository --remove "deb http://apt.kubernetes.io/ kubernetes-xenial main"
curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/amd64/kubectl
curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/amd64/kubeadm
curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/amd64/kubelet
curl -LO https://dl.k8s.io/release/v1.29.3/bin/linux/amd64/kubernetes-cni

chmod +x kubectl kubeadm
sudo mv kubectl kubeadm /usr/local/bin/
sudo apt install kubelet kubernetes-cni -y

sudo kubeadm init #master
# copy kubeadm join 16..... paste to worker nodes to join k8s cluster on kmaster node

kubectl get pods -A
kubectl get nodes # master
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes
# status not ready
# deploy calico
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl get nodes
# status ready on 3 nodes and it's time to deploy pods